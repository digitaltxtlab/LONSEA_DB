tmp.dat <- mice(dat.num.df,m=5,maxit=50,meth='pmm',seed=500)
tmp.dat <- mice(dat.num.df,m=5,maxit=5,meth='pmm',seed=500)
summary(tmp.dat)
summary(tmp.dat)
completed.dat.dg <- complete(tmp.dat,1)
completed.dat.df <- complete(tmp.dat,1)
densityplot(tmp.dat)
densityplot(tmp.dat)
require(tigerstats)
densityplot(tmp.dat)
require(lattice)
densityplot(tmp.dat)
dat.df <- read.csv("data/sheet1.csv")
varnames <- colnames(dat.df)
varnames
dat.df$oname
?read.csv
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
dat.df$oname
?split
strsplit(dat.df$oname)
strsplit(dat.df$oname," ")
strsplit(dat.df$oname," ")[1]
test <- dat.df$oname
test
test <- dat.df$oname[1]
test
strsplit(test," ")
strsplit(test,"[^\s]*")
strsplit(test,"^\s")
strsplit(test,"[^\w]*")
strsplit(test,"[^w]*")
library(stringr)
str_match(test," ")
str_match(test,"w")
str_match(test,"\w")
str_match(test,"LoN")
str_match(dat.df,'LoN')
LoN_id <- dat.df$oname
str_match(LoN_id,'LoN')
str_match(dat.df$oname,'LoN')
is.na(str_match(dat.df$oname,'LoN'))
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
LoN_id <- dat.df$oname
LoN_id[lon_idx]
length(LoN_id[lon_idx])
length(dat.df$oname)
length(dat.df$oname)
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
length(LoN_id[lon_idx])
lon_id = dat.df$oname[lon_idx]
length(lon_id)
head(lon_id)
str_match(lon_id,'General Assembly')
is.na(str_match(lon_id,'General Assembly'))
lon_id[is.na(str_match(lon_id,'General Assembly'))]
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_idx
i = 1:nrows(dat.df)
i = 1:nrow(dat.df)
i <- 1:nrow(dat.df)
length(dat.df$oname)
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
i <- i[lon_idx]
i
i <- 1:nrow(dat.df)
length(dat.df$oname)
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
i <- i[lon_idx]
length(lon_id)
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
lon_naga_id <- lon_id[naga_idx]
naga_id <- lon_id[naga_idx]
i <- [naga_idx]
i <- [naga_idx]
i <- i[naga_idx]
i
naga_id <- lon_id[naga_idx]
dat2.df <- dat.df[i,]
dat2.df
dat2.df$oname
?write.csv
dat2.df <- dat.df[i,]
write.csv(dat2.df, file = "lon_data.csv,")
write.csv(dat2.df, file = "lon_data.csv")
str_replace(dat2.df$pname,"LoN ","")
str_replace(dat2.df$fname,"LoN ","")
dat2.df$fname <- str_replace(dat2.df$fname,"LoN ","")
for(i in 4:6){
dat2.df[,i] <- str_replace(dat2.df[,i],"LoN ","")
}
write.csv(dat2.df, file = "lon_data.csv")
dat2.df$nationality
strsplit(dat2.df$nationality,",")
matrix(data = 'hell', nrow = 3, ncol = 3)
matrix(data = NA, nrow = nrow(dat2.df), ncol = 2)
nation.m <- matrix(data = NA, nrow = nrow(dat2.df), ncol = 2)
nation.l <- strsplit(dat2.df$nationality,",")
tmp <- nation.l[1]
tmp
length(nation.l[1])
unlist(nation.l)
nation.l
dat2.df$nationality
dat2.df$nationality
str_replace(dat2.df$nationality,"\t","")
dat2.df$nationality <- str_replace(dat2.df$nationality,"US-American","USA")
dat2.df$nationality
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
length(dat.df$oname)
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
length(lon_id)
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
head(lon_id)
# export data
dat2.df <- dat.df[i,]
write.csv(dat2.df, file = "lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,i] <- str_replace(dat2.df[,ii],"LoN ","")
}
write.csv(dat2.df, file = "lon_data.csv")
# split nationality
dat2.df$nationality <- str_replace(dat2.df$nationality,"\t","")
rm(list = ls())
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
varnames <- colnames(dat.df)
i <- 1:nrow(dat.df)# numerical index for generation of final data set
length(dat.df$oname)
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
length(lon_id)
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
head(lon_id)
dat2.df <- dat.df[i,]
dat2.df
write.csv(dat2.df, file = "lon_data.csv")
for(ii in 4:6){
dat2.df[,i] <- str_replace(dat2.df[,ii],"LoN ","")
}
write.csv(dat2.df, file = "lon_data.csv")
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
rm(list = ls())
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
length(dat.df$oname)
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
length(lon_id)
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
head(lon_id)
# export data
dat2.df <- dat.df[i,]
write.csv(dat2.df, file = "lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
dat2.df
head(dat2.df)
dat2.df$nationality
str_replace(dat2.df$nationality,"\t","")
dat2.df$nationality <- str_replace(dat2.df$nationality,"\t","")
dat2.df$nationality
head(dat2.df$nationality)
head(dat2.df$nationality,100)
dat2.df$nationality <- str_replace(dat2.df$nationality,"US-American","USA")
head(dat2.df$nationality,100)
unique(dat2.df$nationality)
rm(list = ls())
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
# export data
dat2.df <- dat.df[i,]
# write.csv(dat2.df, file = "lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
head(dat2.df)
# write.csv(dat2.df, file = "lon_data.csv")
# split nationality
dat2.df$nationality <- str_replace(dat2.df$nationality,"\t","")
unique(dat2.df$nationality)
write.csv(unique(dat2.df$nationality), file = 'nationalities.csv')
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv')
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv',col.names = 'nationality')
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv',col.names = 'FALSE')
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv',col.names = FALSE)
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv')
write.csv(dat2.df, file = "data/lon_data.csv")
rm(list = ls())
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
# export data
dat2.df <- dat.df[i,]
# write.csv(dat2.df, file = "data/lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
head(dat2.df)
write.csv(dat2.df, file = "data/lon_data.csv")
# split nationality and transform to country name instead of nationality (for geo-mapping)
dat2.df$nationality <- str_replace(dat2.df$nationality,"\t","")
unique(dat2.df$nationality)
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv')
rm(list = ls())
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
# LoN ids
rm(list = ls())
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
require(stringr)
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
# export data
dat2.df <- dat.df[i,]
# write.csv(dat2.df, file = "data/lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
head(dat2.df)
write.csv(dat2.df, file = "data/lon_data.csv")
# features
unique(dat2.df$fname)
unique(dat2.df$oname)
unique(dat2.df$canonical_fname)
rm(list = ls())
rm(list = ls())
require(stringr)
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
# export data
dat2.df <- dat.df[i,]
# write.csv(dat2.df, file = "data/lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
head(dat2.df)
write.csv(dat2.df, file = "data/lon_data.csv")
# split nationality and transform to country name instead of nationality (for geo-mapping)
dat2.df$nationality <- str_replace(dat2.df$nationality,"\t","")
unique(dat2.df$nationality)
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv')
write.csv(unique(dat2.df$fname), file = 'fname_u.csv')
write.csv(unique(dat2.df$canonical_fname), file = 'canonincal_u.csv')
write.csv(unique(dat2.df$oname), file = 'oname_u.csv')
rm(ls = list())
rm(list = ls())
rm(list = ls())
require(stringr)
dat.df <- read.csv("data/sheet1.csv", stringsAsFactors = FALSE)
# features
varnames <- colnames(dat.df)
# reduce data set to LoN minus General Assembly
i <- 1:nrow(dat.df)# numerical index for generation of final data set
# LoN ids
lon_idx <- !is.na(str_match(dat.df$oname,'LoN'))
lon_id = dat.df$oname[lon_idx]
i <- i[lon_idx]
# general assembly ids
naga_idx <- is.na(str_match(lon_id,'General Assembly'))
naga_id <- lon_id[naga_idx]
i <- i[naga_idx]
# export data
dat2.df <- dat.df[i,]
# write.csv(dat2.df, file = "data/lon_data.csv")
# remove "IoN " in fname,canonical_fname,oname
for(ii in 4:6){
dat2.df[,ii] <- str_replace(dat2.df[,ii],"LoN ","")
}
head(dat2.df)
write.csv(dat2.df, file = "data/lon_data.csv")
# split nationality and transform to country name instead of nationality (for geo-mapping)
dat2.df$nationality <- str_replace(dat2.df$nationality,"\t","")
# export
write.csv(unique(dat2.df$nationality), file = 'data/nationalities.csv')
write.csv(unique(dat2.df$fname), file = 'data/fname_u.csv')
write.csv(unique(dat2.df$canonical_fname), file = 'data/canonincal_u.csv')
write.csv(unique(dat2.df$oname), file = 'data/oname_u.csv')
rm(list = ls())
source("data.clean.R")
source('~/projects/lonsea/data.extract.R', echo=TRUE)
rm(list = ls())
source('~/projects/lonsea/data.extract.R', echo=TRUE)
source('~/projects/lonsea/data.extract.R', echo=TRUE)
getwd()
ls()
dir()
source('~/projects/lonsea/career.dev.R', echo=TRUE)
class.df <- read.csv("data/fname_u_with_categ.csv", stringsAsFactors = FALSE)
?read.csv
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ";", stringsAsFactors = FALSE)
head(class.df)
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ";", header = FALSE, stringsAsFactors = FALSE)
head(class.df)
colname(dat2.df)
colnames(dat2.df)
main.df <- dat2.df; rm(dat2.df)
colnames(main.df)
colnames(main.df)$fname
cmain.df$fname
main.df$fname
unique(main.df$fname)
head(class.df)
head(main.df$fname)
head(class.df)
min(class.df[,1])
max(class.df[,1])
class.df[,1]
class.df[20,]
class.df[length(class.df),]
length(class.df)
dim(class.df)
dim(class.df)[1]
dim(class.df)[1]
class.df[dim(class.df)[1],]
class.df <- class.df[dim(class.df)[1]-1,]
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ";", header = FALSE, stringsAsFactors = FALSE)
is.na(class.df[,1])
!is.na(class.df[,1])
class.df <- class.df[!is.na(class.df[,1]),]
colnames(class.df)
colnames(main.df)
colnames(class.df) = c("u_id", "u_fname" , "u_fname_code")
head(class.df)
class.df[with(class.df, order(u_id))]
class.df[with(class.df, order("u_id"))]
class.df[with(class.df, order("u_id")),]
class.df[with(class.df, order("u_id")), ]
order(class.df$u_id)
class.df$u_id
sort(class.df$u_id)
?sort
sort(class.df$u_id, index.return = TRUE)
idx = order(class.df$u_id)
class.df$u_id[idx]
class.df[order(class.df$u_id),]
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ";", header = FALSE, stringsAsFactors = FALSE)
# remove na
class.df <- class.df[!is.na(class.df[,1]),]
# column names
colnames(class.df) = c("u_id", "u_fname" , "u_fname_code")
class.df <- class.df[order(class.df$u_id),]
rm(list = ls())
#"""
# add coded fnames (classes) to main data frame
#"""
source("data.extract.R")
main.df <- dat2.df; rm(dat2.df)
# import
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ";", header = FALSE, stringsAsFactors = FALSE)
# remove na
class.df <- class.df[!is.na(class.df[,1]),]
# column names
colnames(class.df) = c("u_id", "u_fname" , "u_fname_code")
class.df <- class.df[order(class.df$u_id),]
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ",", header = FALSE, stringsAsFactors = FALSE)
rm(list = ls())
#"""
# add coded fnames (classes) to main data frame
#"""
source("data.extract.R")
main.df <- dat2.df; rm(dat2.df)
# import
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ",", header = FALSE, stringsAsFactors = FALSE)
# remove na
class.df <- class.df[!is.na(class.df[,1]),]
# column names
colnames(class.df) = c("u_id", "u_fname" , "u_fname_code")
View(class.df)
View(class.df)
class.df <- class.df[order(class.df$u_id),]
#!/usr/bin/Rscript
rm(list = ls())
#"""
# add coded fnames (classes) to main data frame
#"""
source("data.extract.R")
main.df <- dat2.df; rm(dat2.df)
# import
class.df <- read.csv("data/fname_u_with_categ.csv", sep = ",", header = FALSE, stringsAsFactors = FALSE)
# remove na
class.df <- class.df[!is.na(class.df[,1]),]
# column names
colnames(class.df) = c("u_id", "u_fname" , "u_fname_code")
class.df <- class.df[order(class.df$u_id),]
write.csv(class.df,"data/tmp.csv")
rm(list = ls())
#"""
# add coded fnames (classes) to main data frame
#"""
source("data.extract.R")
main.df <- dat2.df; rm(dat2.df)
# import
class.df <- read.csv("data/fname_u_with_class.csv", sep = ",", header = FALSE, stringsAsFactors = FALSE)
class.df
colnames(class.df) = c("u_id", "u_fname" , "u_fname_code")
source('~/projects/lonsea/career.dev.R', echo=TRUE)
head(class.df)
head(class.df)
head(man.df)
head(main.df)
head(main.df)
head(main.df)
head(class.df)
fname_code = rep(NA,dim(main.df)[1])
nrow(main.df)
fname_code = rep(NA,nrow(main.df))
nrow(class.df)
for(i in 1:nrow(class.df)){
print(class.df$u_fname[i])
}
?str_match
i = 1
c = class.df$u_fname[i]
main.df$fname
c == main.df$fname
for(i in 1:nrow(class.df)){
#i = 1
cl = class.df$u_fname[i]
idx = cl == main.df$fname
fname_code[idx] = class.df$u_fname_code[i]
}
fname_code
fname_code = rep(NA,nrow(main.df))
for(i in 1:nrow(class.df)){
idx = class.df$u_fname[i] == main.df$fname
fname_code[idx] = class.df$u_fname_code[i]
}
# code every object in main
tmp = rep(NA,nrow(main.df))
for(i in 1:nrow(class.df)){
idx = class.df$u_fname[i] == main.df$fname
tmp[idx] = class.df$u_fname_code[i]
}
main.df$fname_code <- tmp
head(main.df)
require('gender')
install.packages("gender", dependencies = TRUE)
